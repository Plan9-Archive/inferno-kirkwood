Index: mdb.b
===================================================================
--- mdb.b	(revision 405)
+++ mdb.b	(working copy)
@@ -28,27 +28,27 @@
 };
 
 mfd: ref Sys->FD;
-dot := 0;
-lastaddr := 0;
+dot := big 0;
+lastaddr := big 0;
 count := 1;
 
-atoi(s: string): int
+atoi(s: string): big
 {
         b := 10;
         if(s == nil)
-                return 0;
+                return big 0;
         if(s[0] == '0') {
                 b = 8;
                 s = s[1:];
                 if(s == nil)
-                        return 0;
+                        return big 0;
                 if(s[0] == 'x' || s[0] == 'X') {
                         b = 16;
                         s = s[1:];
                 }
         }
-        n: int;
-        (n, nil) = str->toint(s, b);
+        n: big;
+        (n, nil) = str->tobig(s, b);
         return n;
 }
 
@@ -89,16 +89,16 @@
 		return 0;
 }
 
-getexpr(s: string): (string, int, int)
+getexpr(s: string): (string, big, int)
 {
-	ov: int;
-	v := 0;
+	ov: big;
+	v := big 0;
 	op := '+';
 	for(;;) {
 		ov = v;
 		s = eatws(s);
 		if(s == nil)
-			return (nil, 0, 0);
+			return (nil, big 0, 0);
 		if(s[0] == '.' || s[0] == '+' || s[0] == '^') {
 			v = dot;
 			s = s[1:];
@@ -112,7 +112,7 @@
 			v = atoi(s);
 			s = eatnum(s);
 		} else
-			return (s, 0, 0);
+			return (s, big 0, 0);
 		case op {
 		'+' => v = ov+v;
 		'-' => v = ov-v;
@@ -137,7 +137,7 @@
 docmd(s: string)
 {
 	ok: int;
-	n: int;
+	n: big;
 	s = eatws(s);
 	(s, n, ok) = getexpr(s);
 	if(ok) {
@@ -148,7 +148,7 @@
 	if(s != nil && s[0] == ',') {
 		(s, n, ok) = getexpr(s[1:]);
 		if(ok)
-			count = n;
+			count = int n;
 	}
 	if(s == nil && (s = lastcmd) == nil) 
 		return;
@@ -191,12 +191,12 @@
 	}
 }
 
-octal(n: int, d: int): string
+octal(n: big, d: int): string
 {
 	s: string;
 	do {
-		s = string (n%8) + s;
-		n /= 8;
+		s = string (n%big 8) + s;
+		n /= big 8;
 	} while(d-- > 1);
 	return "0" + s;
 }
@@ -248,55 +248,56 @@
 			dot--;
 			continue;
 		'^' =>
-			dot -= n;
+			dot -= big n;
 			continue;
 		* =>
 			print("unknown format '%c'\n", fmt);
 			continue;
 		}
 		b := array[n] of byte;
-		v: int;
+		v: big;
 		if(t == '=')
 			v = dot;
 		else {
-			sys->seek(mfd, big dot, Sys->SEEKSTART);
+			sys->seek(mfd, dot, Sys->SEEKSTART);
 			sys->read(mfd, b, len b);
-			v = 0;
+			v = big 0;
 			for(i := 0; i < n; i++)
-				v |= int b[i] << (8*i);
+				v |= big b[i] << (8*i);
 		}
 		case fmt {
-		'c' => print("%c", v);
-		'C' => print("%s", printable(v));
-		'b' => print("%#2.2ux ", v);
-		'x' => print("%#4.4ux ", v);
-		'X' => print("%#8.8ux ", v);
-		'd' => print("%-4d ", v);
-		'D' => print("%-8d ", v);
-		'u' => print("%-4ud ", v);
-		'U' => print("%-8ud ", v);
+		'c' => print("%c", int v);
+		'C' => print("%s", printable(int v));
+		'b' => print("%#2.2bux ", v);
+		'x' => print("%#4.4bux ", v);
+		'X' => print("%#8.8bux ", v);
+		'd' => print("%-4bd ", v);
+		'D' => print("%-8bd ", v);
+		'u' => print("%-4bud ", v);
+		'U' => print("%-8bud ", v);
 		'o' => print("%s ", octal(v, 6));
 		'O' => print("%s ", octal(v, 11));
 		}
 		if(t != '=')
-			dot += n;
+			dot += big n;
 	}
 	print("\n");
 }
 
 writemem(n: int, s: string)
 {
-	v: int;
+	v: big;
 	ok: int;
 	s = eatws(s);
-	sys->seek(mfd, big dot, Sys->SEEKSTART);
+	sys->seek(mfd, dot, Sys->SEEKSTART);
 	for(;;) {
 		(s, v, ok) = getexpr(s);
 		if(!ok)
 			return;
 		b := array[n] of byte;
+		iv := int v;
 		for(i := 0; i < n; i++)
-			b[i] = byte (v >> (8*i));
+			b[i] = byte (iv >> (8*i));
 		if (sys->write(mfd, b, len b) != len b)
 			sys->fprint(stderr, "mdb: write error: %r\n");
 	}
@@ -481,7 +482,7 @@
 	if(m == nil || m.magic == 0)
 		return;
 
-	for(i := dot;  count-- > 0 && i < m.isize; i++) {
+	for(i := int dot;  count-- > 0 && i < m.isize; i++) {
 		if(i % 10 == 0)
 			print("#%d\n", i);
 		print("\t%s\n", dis->inst2s(m.inst[i]));
